import{d as $}from"./_/5441cc6f.js";import{i as Y,e as Z}from"./_/6a22cb68.js";export{d as defaultFieldResolver,b as defaultTypeResolver,e as execute,a as executeSync,l as locatedError}from"./_/6a22cb68.js";import{p as ee}from"./_/5f0a53ad.js";export{L as Lexer,T as TokenKind,p as parse,b as parseConstValue,c as parseType,a as parseValue,s as syntaxError}from"./_/5f0a53ad.js";import{v as ae}from"./_/3b64621d.js";export{a as assertValidSchema,d as doTypesOverlap,i as isEqualType,b as isTypeSubTypeOf,v as validateSchema}from"./_/3b64621d.js";import{v as se}from"./_/4a549a34.js";export{E as ExecutableDefinitionsRule,F as FieldsOnCorrectTypeRule,k as FragmentsOnCompositeTypesRule,K as KnownArgumentNamesRule,l as KnownDirectivesRule,m as KnownFragmentNamesRule,n as KnownTypeNamesRule,L as LoneAnonymousOperationRule,D as LoneSchemaDefinitionRule,N as NoFragmentCyclesRule,o as NoUndefinedVariablesRule,p as NoUnusedFragmentsRule,q as NoUnusedVariablesRule,O as OverlappingFieldsCanBeMergedRule,P as PossibleFragmentSpreadsRule,R as PossibleTypeExtensionsRule,r as ProvidedRequiredArgumentsRule,S as ScalarLeafsRule,t as SingleFieldSubscriptionsRule,T as TypeInfo,M as UniqueArgumentDefinitionNamesRule,U as UniqueArgumentNamesRule,Q as UniqueDirectiveNamesRule,u as UniqueDirectivesPerLocationRule,I as UniqueEnumValueNamesRule,J as UniqueFieldDefinitionNamesRule,w as UniqueFragmentNamesRule,x as UniqueInputFieldNamesRule,y as UniqueOperationNamesRule,G as UniqueOperationTypesRule,H as UniqueTypeNamesRule,z as UniqueVariableNamesRule,V as ValidationContext,A as ValuesOfCorrectTypeRule,B as VariablesAreInputTypesRule,C as VariablesInAllowedPositionRule,d as isConstValueNode,i as isDefinitionNode,a as isExecutableDefinitionNode,b as isSelectionNode,g as isTypeDefinitionNode,j as isTypeExtensionNode,e as isTypeNode,f as isTypeSystemDefinitionNode,h as isTypeSystemExtensionNode,c as isValueNode,s as specifiedRules,v as validate,W as visitWithTypeInfo}from"./_/4a549a34.js";export{G as GraphQLSchema,a as assertSchema,i as isSchema}from"./_/6e92b728.js";import{g as re,i as te}from"./_/bc458a3e.js";export{e as GraphQLEnumType,f as GraphQLInputObjectType,c as GraphQLInterfaceType,h as GraphQLList,j as GraphQLNonNull,b as GraphQLObjectType,G as GraphQLScalarType,d as GraphQLUnionType,R as assertAbstractType,Q as assertCompositeType,J as assertEnumType,X as assertEnumValueName,K as assertInputObjectType,N as assertInputType,H as assertInterfaceType,P as assertLeafType,L as assertListType,W as assertName,U as assertNamedType,M as assertNonNullType,T as assertNullableType,F as assertObjectType,O as assertOutputType,E as assertScalarType,D as assertType,I as assertUnionType,S as assertWrappingType,g as getNamedType,V as getNullableType,x as isAbstractType,w as isCompositeType,p as isEnumType,i as isInputObjectType,t as isInputType,n as isInterfaceType,v as isLeafType,q as isListType,A as isNamedType,s as isNonNullType,z as isNullableType,m as isObjectType,u as isOutputType,B as isRequiredArgument,C as isRequiredInputField,l as isScalarType,k as isType,o as isUnionType,y as isWrappingType,r as resolveObjMapThunk,a as resolveReadonlyArrayThunk}from"./_/bc458a3e.js";import{i as ie}from"./_/0cc1337d.js";export{D as DEFAULT_DEPRECATION_REASON,f as GRAPHQL_MAX_INT,g as GRAPHQL_MIN_INT,d as GraphQLBoolean,l as GraphQLDeprecatedDirective,G as GraphQLDirective,b as GraphQLFloat,e as GraphQLID,j as GraphQLIncludeDirective,a as GraphQLInt,k as GraphQLSkipDirective,m as GraphQLSpecifiedByDirective,c as GraphQLString,S as SchemaMetaFieldDef,T as TypeKind,w as TypeMetaFieldDef,x as TypeNameMetaFieldDef,o as __Directive,p as __DirectiveLocation,u as __EnumValue,r as __Field,t as __InputValue,_ as __Schema,q as __Type,v as __TypeKind,B as assertDirective,C as astFromValue,n as introspectionTypes,y as isDirective,i as isIntrospectionType,A as isSpecifiedDirective,z as isSpecifiedScalarType,h as specifiedDirectives,s as specifiedScalarTypes}from"./_/0cc1337d.js";export{Source}from"./language/source.mjs";import{i as ne,G as oe}from"./_/3b3c2494.js";export{G as GraphQLError,f as formatError,g as getLocation,b as printError,p as printLocation,a as printSourceLocation}from"./_/3b3c2494.js";export{Kind}from"./language/kinds.mjs";export{print}from"./language/printer.mjs";export{BREAK,getEnterLeaveForKind,getVisitFn,visit,visitInParallel}from"./language/visitor.mjs";export{L as Location,O as OperationTypeNode,T as Token}from"./_/e9339a0a.js";export{D as DirectiveLocation}from"./_/e2b1edd1.js";export{c as coerceInputValue,g as getArgumentValues,b as getDirectiveValues,a as getVariableValues,p as responsePathAsArray,t as typeFromAST}from"./_/7441f5da.js";export{c as createSourceEventStream,s as subscribe}from"./_/7453e410.js";export{BreakingChangeType,DangerousChangeType,assertValidName,concatAST,findBreakingChanges,findDangerousChanges,getOperationAST,getOperationRootType,introspectionFromSchema,isValidNameError,lexicographicSortSchema,separateOperations,stripIgnoredCharacters}from"./utilities/index.mjs";export{getIntrospectionQuery}from"./utilities/getIntrospectionQuery.mjs";export{buildClientSchema}from"./utilities/buildClientSchema.mjs";export{b as buildASTSchema,a as buildSchema,e as extendSchema}from"./_/24c8d6b3.js";export{printIntrospectionSchema,printSchema,printType}from"./utilities/printSchema.mjs";export{v as valueFromAST}from"./_/531428f4.js";export{v as valueFromASTUntyped}from"./_/7d7dd823.js";import"./jsutils/inspect.mjs";import"./_/fe0ca146.js";import"./_/3b1f1fc3.js";import"./_/74a3a370.js";const pe="16.4.0";const le=Object.freeze({major:16,minor:4,patch:0,preReleaseTag:null});function graphql(e){return new Promise((a=>a(graphqlImpl(e))))}function graphqlSync(e){const a=graphqlImpl(e);if(Y(a))throw new Error("GraphQL execution failed to complete synchronously.");return a}function graphqlImpl(e){arguments.length<2||$(false,"graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.");const{schema:a,source:s,rootValue:r,contextValue:t,variableValues:i,operationName:n,fieldResolver:o,typeResolver:p}=e;const l=ae(a);if(l.length>0)return{errors:l};let u;try{u=ee(s)}catch(e){return{errors:[e]}}const c=se(a,u);return c.length>0?{errors:c}:Z({schema:a,document:u,rootValue:r,contextValue:t,variableValues:i,operationName:n,fieldResolver:o,typeResolver:p})}function NoDeprecatedCustomRule(e){return{Field(a){const s=e.getFieldDef();const r=null===s||void 0===s?void 0:s.deprecationReason;if(s&&null!=r){const t=e.getParentType();null!=t||ne(false);e.reportError(new oe(`The field ${t.name}.${s.name} is deprecated. ${r}`,{nodes:a}))}},Argument(a){const s=e.getArgument();const r=null===s||void 0===s?void 0:s.deprecationReason;if(s&&null!=r){const t=e.getDirective();if(null!=t)e.reportError(new oe(`Directive "@${t.name}" argument "${s.name}" is deprecated. ${r}`,{nodes:a}));else{const t=e.getParentType();const i=e.getFieldDef();null!=t&&null!=i||ne(false);e.reportError(new oe(`Field "${t.name}.${i.name}" argument "${s.name}" is deprecated. ${r}`,{nodes:a}))}}},ObjectField(a){const s=re(e.getParentInputType());if(te(s)){const r=s.getFields()[a.name.value];const t=null===r||void 0===r?void 0:r.deprecationReason;null!=t&&e.reportError(new oe(`The input field ${s.name}.${r.name} is deprecated. ${t}`,{nodes:a}))}},EnumValue(a){const s=e.getEnumValue();const r=null===s||void 0===s?void 0:s.deprecationReason;if(s&&null!=r){const t=re(e.getInputType());null!=t||ne(false);e.reportError(new oe(`The enum value "${t.name}.${s.name}" is deprecated. ${r}`,{nodes:a}))}}}}function NoSchemaIntrospectionCustomRule(e){return{Field(a){const s=re(e.getType());s&&ie(s)&&e.reportError(new oe(`GraphQL introspection has been disabled, but the requested query contained the field "${a.name.value}".`,{nodes:a}))}}}export{NoDeprecatedCustomRule,NoSchemaIntrospectionCustomRule,graphql,graphqlSync,pe as version,le as versionInfo};

