var e={};Object.defineProperty(e,"__esModule",{value:true});e.pathToRegexp=e.tokensToRegexp=e.regexpToFunction=e.match=e.tokensToFunction=e.compile=e.parse=void 0;function lexer(e){var r=[];var t=0;while(t<e.length){var n=e[t];if("*"!==n&&"+"!==n&&"?"!==n)if("\\"!==n)if("{"!==n)if("}"!==n)if(":"!==n)if("("!==n)r.push({type:"CHAR",index:t,value:e[t++]});else{var i=1;var a="";var o=t+1;if("?"===e[o])throw new TypeError('Pattern cannot start with "?" at '+o);while(o<e.length)if("\\"!==e[o]){if(")"===e[o]){i--;if(0===i){o++;break}}else if("("===e[o]){i++;if("?"!==e[o+1])throw new TypeError("Capturing groups are not allowed at "+o)}a+=e[o++]}else a+=e[o++]+e[o++];if(i)throw new TypeError("Unbalanced pattern at "+t);if(!a)throw new TypeError("Missing pattern at "+t);r.push({type:"PATTERN",index:t,value:a});t=o}else{var p="";var o=t+1;while(o<e.length){var f=e.charCodeAt(o);if(!(f>=48&&f<=57||f>=65&&f<=90||f>=97&&f<=122||95===f))break;p+=e[o++]}if(!p)throw new TypeError("Missing parameter name at "+t);r.push({type:"NAME",index:t,value:p});t=o}else r.push({type:"CLOSE",index:t,value:e[t++]});else r.push({type:"OPEN",index:t,value:e[t++]});else r.push({type:"ESCAPED_CHAR",index:t++,value:e[t++]});else r.push({type:"MODIFIER",index:t,value:e[t++]})}r.push({type:"END",index:t,value:""});return r}function parse(e,r){void 0===r&&(r={});var t=lexer(e);var n=r.prefixes,i=void 0===n?"./":n;var a="[^"+escapeString(r.delimiter||"/#?")+"]+?";var o=[];var p=0;var f=0;var s="";var tryConsume=function(e){if(f<t.length&&t[f].type===e)return t[f++].value};var mustConsume=function(e){var r=tryConsume(e);if(void 0!==r)return r;var n=t[f],i=n.type,a=n.index;throw new TypeError("Unexpected "+i+" at "+a+", expected "+e)};var consumeText=function(){var e="";var r;while(r=tryConsume("CHAR")||tryConsume("ESCAPED_CHAR"))e+=r;return e};while(f<t.length){var u=tryConsume("CHAR");var v=tryConsume("NAME");var c=tryConsume("PATTERN");if(v||c){var x=u||"";if(-1===i.indexOf(x)){s+=x;x=""}if(s){o.push(s);s=""}o.push({name:v||p++,prefix:x,suffix:"",pattern:c||a,modifier:tryConsume("MODIFIER")||""})}else{var l=u||tryConsume("ESCAPED_CHAR");if(l)s+=l;else{if(s){o.push(s);s=""}var g=tryConsume("OPEN");if(g){var x=consumeText();var d=tryConsume("NAME")||"";var h=tryConsume("PATTERN")||"";var T=consumeText();mustConsume("CLOSE");o.push({name:d||(h?p++:""),pattern:d&&!h?a:h,prefix:x,suffix:T,modifier:tryConsume("MODIFIER")||""})}else mustConsume("END")}}}return o}e.parse=parse;function compile(e,r){return tokensToFunction(parse(e,r),r)}e.compile=compile;function tokensToFunction(e,r){void 0===r&&(r={});var t=flags(r);var n=r.encode,i=void 0===n?function(e){return e}:n,a=r.validate,o=void 0===a||a;var p=e.map((function(e){if("object"===typeof e)return new RegExp("^(?:"+e.pattern+")$",t)}));return function(r){var t="";for(var n=0;n<e.length;n++){var a=e[n];if("string"!==typeof a){var f=r?r[a.name]:void 0;var s="?"===a.modifier||"*"===a.modifier;var u="*"===a.modifier||"+"===a.modifier;if(Array.isArray(f)){if(!u)throw new TypeError('Expected "'+a.name+'" to not repeat, but got an array');if(0===f.length){if(s)continue;throw new TypeError('Expected "'+a.name+'" to not be empty')}for(var v=0;v<f.length;v++){var c=i(f[v],a);if(o&&!p[n].test(c))throw new TypeError('Expected all "'+a.name+'" to match "'+a.pattern+'", but got "'+c+'"');t+=a.prefix+c+a.suffix}}else if("string"!==typeof f&&"number"!==typeof f){if(!s){var x=u?"an array":"a string";throw new TypeError('Expected "'+a.name+'" to be '+x)}}else{var c=i(String(f),a);if(o&&!p[n].test(c))throw new TypeError('Expected "'+a.name+'" to match "'+a.pattern+'", but got "'+c+'"');t+=a.prefix+c+a.suffix}}else t+=a}return t}}e.tokensToFunction=tokensToFunction;function match(e,r){var t=[];var n=pathToRegexp(e,t,r);return regexpToFunction(n,t,r)}e.match=match;function regexpToFunction(e,r,t){void 0===t&&(t={});var n=t.decode,i=void 0===n?function(e){return e}:n;return function(t){var n=e.exec(t);if(!n)return false;var a=n[0],o=n.index;var p=Object.create(null);var _loop_1=function(e){if(void 0===n[e])return"continue";var t=r[e-1];"*"===t.modifier||"+"===t.modifier?p[t.name]=n[e].split(t.prefix+t.suffix).map((function(e){return i(e,t)})):p[t.name]=i(n[e],t)};for(var f=1;f<n.length;f++)_loop_1(f);return{path:a,index:o,params:p}}}e.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1")}function flags(e){return e&&e.sensitive?"":"i"}function regexpToRegexp(e,r){if(!r)return e;var t=/\((?:\?<(.*?)>)?(?!\?)/g;var n=0;var i=t.exec(e.source);while(i){r.push({name:i[1]||n++,prefix:"",suffix:"",modifier:"",pattern:""});i=t.exec(e.source)}return e}function arrayToRegexp(e,r,t){var n=e.map((function(e){return pathToRegexp(e,r,t).source}));return new RegExp("(?:"+n.join("|")+")",flags(t))}function stringToRegexp(e,r,t){return tokensToRegexp(parse(e,t),r,t)}function tokensToRegexp(e,r,t){void 0===t&&(t={});var n=t.strict,i=void 0!==n&&n,a=t.start,o=void 0===a||a,p=t.end,f=void 0===p||p,s=t.encode,u=void 0===s?function(e){return e}:s;var v="["+escapeString(t.endsWith||"")+"]|$";var c="["+escapeString(t.delimiter||"/#?")+"]";var x=o?"^":"";for(var l=0,g=e;l<g.length;l++){var d=g[l];if("string"===typeof d)x+=escapeString(u(d));else{var h=escapeString(u(d.prefix));var T=escapeString(u(d.suffix));if(d.pattern){r&&r.push(d);if(h||T)if("+"===d.modifier||"*"===d.modifier){var m="*"===d.modifier?"?":"";x+="(?:"+h+"((?:"+d.pattern+")(?:"+T+h+"(?:"+d.pattern+"))*)"+T+")"+m}else x+="(?:"+h+"("+d.pattern+")"+T+")"+d.modifier;else x+="("+d.pattern+")"+d.modifier}else x+="(?:"+h+T+")"+d.modifier}}if(f){i||(x+=c+"?");x+=t.endsWith?"(?="+v+")":"$"}else{var E=e[e.length-1];var y="string"===typeof E?c.indexOf(E[E.length-1])>-1:void 0===E;i||(x+="(?:"+c+"(?="+v+"))?");y||(x+="(?="+c+"|"+v+")")}return new RegExp(x,flags(t))}e.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,r,t){return e instanceof RegExp?regexpToRegexp(e,r):Array.isArray(e)?arrayToRegexp(e,r,t):stringToRegexp(e,r,t)}e.pathToRegexp=pathToRegexp;const r=e.__esModule;const t=e.pathToRegexp,n=e.tokensToRegexp,i=e.regexpToFunction,a=e.match,o=e.tokensToFunction,p=e.compile,f=e.parse;export default e;export{r as __esModule,p as compile,a as match,f as parse,t as pathToRegexp,i as regexpToFunction,o as tokensToFunction,n as tokensToRegexp};

